# Generated by Django 4.1.2 on 2023-03-08 16:53

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('fo', '0009_flightoperator_class_list'),
        ('simapp', '0020_alter_sim_mission_script'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommandBufferItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buffer_item', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='DisplayBufferItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buffer_item', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.DeleteModel(
            name='ACS_Menu',
        ),
        migrations.RemoveField(
            model_name='console_buffer',
            name='buffer_list',
        ),
        migrations.RemoveField(
            model_name='subsystem',
            name='subsys_console_buffer',
        ),
        migrations.AddField(
            model_name='sim',
            name='sys_list',
            field=models.ManyToManyField(blank=True, to='simapp.subsystem', verbose_name='Subsystem'),
        ),
        migrations.AlterField(
            model_name='sim',
            name='flight_operators',
            field=models.ManyToManyField(blank=True, default='', to='fo.flightoperator', verbose_name='Flight Operators'),
        ),
        migrations.DeleteModel(
            name='Buffer_Item',
        ),
        migrations.DeleteModel(
            name='Console_Buffer',
        ),
        migrations.AddField(
            model_name='sim',
            name='display_buffer',
            field=models.ManyToManyField(blank=True, to='simapp.displaybufferitem', verbose_name='Display buffer'),
        ),
        migrations.AddField(
            model_name='subsystem',
            name='command_buffer',
            field=models.ManyToManyField(blank=True, to='simapp.commandbufferitem', verbose_name='command buffer'),
        ),
    ]
